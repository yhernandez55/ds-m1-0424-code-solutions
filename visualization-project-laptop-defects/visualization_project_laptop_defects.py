# -*- coding: utf-8 -*-
"""visualization-project-laptop-defects.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1luR1EyBWfxAuTP79aon700eziKW2caQX
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

file_path = '/content/Data_Analysis_Project.xlsx'
df = pd.read_excel(file_path, sheet_name='Data')
df

# 1
df['Month ID(YYYYMM)'] = pd.to_datetime(df['Month ID(YYYYMM)'].astype(str), format='%Y%m')

# Set the datetime column as the index
df.set_index('Month ID(YYYYMM)', inplace=True)

# Plot the data
plt.figure(figsize=(10, 6))
plt.plot(df.index, df['Defects'], marker='o')

# Format the x-axis to show month abbreviations
plt.gca().xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%b %Y'))

plt.title('Defects Over Time')
plt.xlabel('Month')
plt.ylabel('Defects')
plt.grid(True)
plt.show()

# 2
plt.figure(figsize=(10, 6))
plt.plot(df.index, df['Opportunities'], marker='o')

# Format the x-axis to show month abbreviations
plt.gca().xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%b %Y'))

plt.title('Opportunities Over Time')
plt.xlabel('Month')
plt.ylabel('Opportunities')
plt.grid(True)
plt.show()

# 3

defect_rate = df['Defects']/df['Opportunities']
mean_defect_rate = defect_rate.mean()
limit_2std = df['2 Sigma limit']/1000000
limit_3std = df['3 Sigma limit']/1000000
std_defect_rate = defect_rate.std()

plt.figure(figsize=(10, 6))
plt.plot(df.index, defect_rate, marker='o', linestyle='-', color='r', label='Defect Rate')
plt.axhline(y=mean_defect_rate, color='blue', linestyle='--', label='Mean Defect Rate')
plt.axhline(y=limit_2std[0], color='orange', linestyle='--', label='UCL (Mean + 2σ)')
plt.axhline(y=limit_3std[0], color='green', linestyle='--', label='UCl (Mean + 3σ)')
plt.title('Defect Rate Over Time with Control Limits')
plt.xlabel('Time')
plt.ylabel('Defect Rate')
plt.legend()
plt.gca().xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%b %Y'))

# 4
fig, ax1 = plt.subplots(figsize=(10, 6))

# Plot defects and opportunities on ax1 (left y-axis)
ax1.plot(df.index, df['Defects'], color='r', marker='o', label='Defects')
ax1.plot(df.index, df['Opportunities'], color='b', marker='o', label='Opportunities')
ax1.set_ylabel('Number of Defects/Opportunities', color='k')

# formatting it as month and year
ax1.xaxis.set_major_formatter(plt.matplotlib.dates.DateFormatter('%b %Y'))

# Create ax2 (right y-axis) for defect rate
ax2 = ax1.twinx()
ax2.plot(df.index, defect_rate, color='g', marker='o', label='Defect Rate')
ax2.axhline(y=mean_defect_rate, color='blue', linestyle='--', label='Mean Defect Rate')
ax2.axhline(y=limit_2std[0], color='orange', linestyle='--', label='UCL (Mean + 2σ)')
ax2.axhline(y=limit_3std[0], color='green', linestyle='--', label='UCL (Mean + 3σ)')
ax2.set_ylabel('Defect Rate', color='k')

# Set title and legends
ax1.set_title('Defects, Opportunities, and Defect Rate Over Time')
fig.legend(loc='lower left')

plt.show()

# 5 
# Points to label
points_to_label = [defect_rate.idxmax(), df['Opportunities'].idxmax(), df['Defects'].idxmax()]
labels = ['max defect rate', 'max opportunities', 'max defects']

# Print the points
for point, label in zip(points_to_label, labels):
    if label == 'max defect rate':
        print(f"{label}: Date = {point}, Value = {defect_rate[point]}")
        ax2.annotate(label, (point, defect_rate[point]), textcoords="offset points", xytext=(0,10), ha='center', color='g')
    elif label == 'max opportunities':
        print(f"{label}: Date = {point}, Value = {df['Opportunities'][point]}")
        ax1.annotate(label, (point, df['Opportunities'][point]), textcoords="offset points", xytext=(0,10), ha='center', color='b')
    elif label == 'max defects':
        print(f"{label}: Date = {point}, Value = {df['Defects'][point]}")
        ax1.annotate(label, (point, df['Defects'][point]), textcoords="offset points", xytext=(0,10), ha='center', color='r')

plt.show()
